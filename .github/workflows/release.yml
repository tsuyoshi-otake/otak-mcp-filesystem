name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Create tarball
        run: npm pack
        
      - name: Get package filename
        id: package
        run: echo "filename=$(ls otak-mcp-filesystem-*.tgz)" >> $GITHUB_OUTPUT
        
      - name: Upload main package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.package.outputs.filename }}
          asset_name: otak-mcp-filesystem.tgz
          asset_content_type: application/gzip
          
      - name: Create installer package
        run: |
          cd install-otak-mcp-filesystem
          npm pack
          
      - name: Get installer filename
        id: installer
        run: echo "filename=$(ls install-otak-mcp-filesystem/install-otak-mcp-filesystem-*.tgz)" >> $GITHUB_OUTPUT
        
      - name: Upload installer package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.installer.outputs.filename }}
          asset_name: install-otak-mcp-filesystem.tgz
          asset_content_type: application/gzip